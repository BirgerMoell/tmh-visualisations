{"version":3,"sources":["logo.svg","Spectrogram-19thC.png","tmh.png","Fruit.js","ulme.jpeg","anna.jpeg","birger/Metrics.js","birger/App.js","ulme/App.js","App.js","reportWebVitals.js","index.js"],"names":["Fruit","props","console","log","value","whateverIwant","patients","id","name","personalNumber","gender","diagnosis","cognitiveProfile","moca","speechPattern","pausePattern","languagePattern","drawingPattern","gazePattern","pupilPattern","heatPattern","Metrics","useState","patient","setPatient","className","for","onChange","e","target","map","PercentileDataViewer","Object","keys","key","getValues","percent","array","number","sort","count","forEach","item","perc","length","percentile","convertValueToArray","object","DataLoader","MARGIN","WIDTH","HEIGHT","g","d3","append","attr","data","x_value","x","y_value","y","text","domain","d","range","paddingInner","paddingOuter","Number","xAxisCall","call","selectAll","yAxisCall","ticks","tickFormat","update","t","duration","rects","exit","remove","enter","merge","transition","bandwidth","diagnose","App","setData","loadData","a","result","JSON","stringify","useEffect","selectLoadData","uri","labels","setXandY","columns","dataset","selected","disabled","hidden","to","width","height","src","logo","path","About","Anna","Front","Footer","tmh","spectogram","Home","speed","setSpeed","changeSpeed","change","person","imgSource","Rotating","Button","onClick","type","styled","img","css","anna","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f7042620.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.10113774.svg\";","export default __webpack_public_path__ + \"static/media/Spectrogram-19thC.8446af6f.png\";","export default __webpack_public_path__ + \"static/media/tmh.18b3c121.png\";","\nexport function Fruit(props) {\n\n    console.log(\"the props are\", props)\n    if (props.value === \"banan\") {\n      return <p> We got the banana! </p>\n    } else {\n      return (\n        <p>{props.whateverIwant}</p>\n      )\n    }\n  \n  }","export default __webpack_public_path__ + \"static/media/ulme.e5eb80ba.jpeg\";","export default __webpack_public_path__ + \"static/media/anna.ec5fcb66.jpeg\";","import React, { useState, useEffect } from 'react'\n\nconst patients = [\n  {\n    id: 1,\n    name: \"Tolvan Tolvansson\",\n    personalNumber: \"19900101-xxxx\",\n    gender: \"male\",\n    diagnosis: \"Alzheimer\",\n    cognitiveProfile: {\n      moca: 27,\n      speechPattern: 1.23,\n      pausePattern: 2.26,\n      languagePattern: 3.7,\n      drawingPattern: 2.9,\n      gazePattern: 3.32,\n      pupilPattern: 3.2,\n      heatPattern: 2.9,\n    },\n  },\n  {\n    id: 2,\n    name: \"Tolvan Elvan\",\n    personalNumber: \"19890101-xxxx\",\n    gender: \"male\",\n    diagnosis: \"Alzheimer\",\n    cognitiveProfile: {\n      moca: 23,\n      speechPattern: 1.22,\n      pausePattern: 2.26,\n      languagePattern: 3.7,\n      drawingPattern: 2.9,\n      gazePattern: 3.32,\n      pupilPattern: 3.2,\n      heatPattern: 2.7,\n    },\n  },\n  {\n    id: 3,\n    name: \"Tolvan Tio\",\n    personalNumber: \"19880101-xxxx\",\n    gender: \"male\",\n    diagnosis: \"Alzheimer\",\n    cognitiveProfile: {\n      moca: 25,\n      speechPattern: 1.27,\n      pausePattern: 2.26,\n      languagePattern: 3.7,\n      drawingPattern: 2.9,\n      gazePattern: 3.32,\n      pupilPattern: 3.2,\n      heatPattern: 2.8,\n    },\n  },\n  {\n    id: 4,\n    name: \"Tolvan Nio\",\n    personalNumber: \"19870101-xxxx\",\n    gender: \"male\",\n    diagnosis: \"Alzheimer\",\n    cognitiveProfile: {\n      moca: 24,\n      speechPattern: 1.82,\n      pausePattern: 2.26,\n      languagePattern: 3.7,\n      drawingPattern: 2.9,\n      gazePattern: 3.32,\n      pupilPattern: 3.2,\n      heatPattern: 2.2,\n    },\n  },\n  {\n    id: 5,\n    name: \"Tolvan åtta\",\n    personalNumber: \"19860101-xxxx\",\n    gender: \"male\",\n    diagnosis: \"Alzheimer\",\n    cognitiveProfile: {\n      moca: 22,\n      speechPattern: 1.23,\n      pausePattern: 2.26,\n      languagePattern: 3.7,\n      drawingPattern: 2.9,\n      gazePattern: 3.32,\n      pupilPattern: 3.2,\n      heatPattern: 2.7,\n    },\n  },\n];\n\nconst percentile = (array, number) => {\n  array = array.sort();\n  let count = 0;\n\n  array.forEach((item) => {\n    if (number >= item) {\n      count++;\n    }\n  });\n  let perc = count / array.length;\n  console.log(\"perc is\", perc);\n  return perc * 100;\n};\n\nexport const Metrics = () => {\n\n    const [patient, setPatient] = useState(patients[2])\n\n  return (\n\n    <div className=\"Patient-view-container\">\n\n    <label for=\"patient\">Choose a patient:</label>\n    <select onChange={e => setPatient(patients[e.target.value-1])} name=\"patient\" id=\"patient\">\n        {patients.map(patient =>\n         <option value={patient.id}>{patient.personalNumber}</option>\n        )}\n       \n        </select>\n\n    <div className=\"Overview-grid-container\">\n\n        {PercentileDataViewer(patients, patient)}\n    </div>\n    </div>\n  );\n};\n\nconst PercentileDataViewer = (patients, patient) => {\n\n    return (\n\n        Object.keys(patient.cognitiveProfile).map( key => \n            <div className=\"Overview-grid-item\">\n                <p>\n                {key} {getValues(patients, patient, key)} %{\" \"}\n              </p>\n            </div>\n        )\n    )\n\n}\n\nconst getPercentageString = (percentage) => {\n\n\n}\n\nconst getValues = (patients, patient, value) => {\n    let array = convertValueToArray(patients, value)\n    let percent = percentile(array, patient.cognitiveProfile[value])\n    console.log(\"the percent is\", percent)\n    return percent\n}\n\nconst convertValueToArray = (object, value) => {\n  var array = Object.keys(object).map(function (key) {\n    return object[key].cognitiveProfile[value];\n  });\n  return array;\n};\n","import React, { useState, useEffect } from 'react'\nimport './App.css';\nimport * as d3 from \"d3\";\nimport { Metrics } from \"./Metrics\"\n\n\nlet dataJson = \n{\n  \"value\": [\n    {\n      \"diagnose\": \"Healthy\",\n      \"count\": \"13\"\n    },\n    {\n      \"diagnose\": \"MCI\",\n      \"count\": \"7\"\n    },\n    {\n      \"diagnose\": \"Alzheimer\",\n      \"count\": \"4\"\n    }\n  ],\n  \"dataset\": \"diagnose_count\",\n  \"x\": \"diagnose\",\n  \"y\": \"count\"\n}\n\nfunction DataLoader(props) {\n\n    const MARGIN = { LEFT: 100, RIGHT: 10, TOP: 10, BOTTOM: 130 }\n    const WIDTH = 1200 - MARGIN.LEFT - MARGIN.RIGHT\n    const HEIGHT = 800 - MARGIN.TOP - MARGIN.BOTTOM\n\n    const svg = d3.select(\"#chart-area\").append(\"svg\")\n      .attr(\"width\", WIDTH + MARGIN.LEFT + MARGIN.RIGHT)\n      .attr(\"height\", HEIGHT + MARGIN.TOP + MARGIN.BOTTOM)\n\n    const g = svg.append(\"g\")\n      .attr(\"transform\", `translate(${MARGIN.LEFT}, ${MARGIN.TOP})`)\n\n    const data = props.data && props.data.value\n\n    const x_value = props.data.x\n    console.log(\"the data is\", props.data)\n    console.log(\"the x value is\", x_value)\n    const y_value = props.data.y\n    \n    // X label\n    g.append(\"text\")\n      .attr(\"class\", \"x axis-label\")\n      .attr(\"x\", WIDTH / 2)\n      .attr(\"y\", HEIGHT + 110)\n      .attr(\"font-size\", \"28px\")\n      .attr(\"text-anchor\", \"middle\")\n      .text(x_value)\n\n    // Y label\n    g.append(\"text\")\n      .attr(\"class\", \"y axis-label\")\n      .attr(\"x\", - (HEIGHT / 2))\n      .attr(\"y\", -60)\n      .attr(\"font-size\", \"28px\")\n      .attr(\"text-anchor\", \"middle\")\n      .attr(\"transform\", \"rotate(-90)\")\n      .text(y_value)\n\n      const x = d3.scaleBand()\n        .domain(data.map(d => d[x_value]))\n        .range([0, WIDTH])\n        .paddingInner(0.3)\n        .paddingOuter(0.2)\n      \n      const y = d3.scaleLinear()\n        .domain([0, d3.max(data, d => Number(d[y_value]))])\n        .range([0, HEIGHT])\n\n      const xAxisCall = d3.axisBottom(x)\n      g.append(\"g\")\n        .attr(\"class\", \"x axis\")\n        .attr(\"transform\", `translate(0, ${HEIGHT})`)\n        .call(xAxisCall)\n        .selectAll(\"text\")\n          .attr(\"y\", \"10\")\n          .attr(\"text-align\", \"center\")\n          .attr(\"font-size\", \"16px\")\n\n      const yAxisCall = d3.axisLeft(y)\n        .ticks(5)\n        .tickFormat(d => d)\n      g.append(\"g\")\n        .attr(\"class\", \"y axis\")\n        .call(yAxisCall)\n\n\n        d3.interval(() => {\n          update(data)\n        }, 1000)\n      \n        const update = (data) => {\n\n            if (data) {\n\n                const t = d3.transition().duration(750)\n\n                // JOIN new data with old elements.\n                const rects = g.selectAll(\"rect\")\n                .data(data)\n      \n                // EXIT old elements not present in new data.\n                rects.exit().remove()\n      \n                // ENTER new elements present in new data...\n                rects.enter().append(\"rect\")\n                .attr(\"fill\", \"#fff\")\n                .attr(\"y\", y(0))\n                .attr(\"height\", 0)\n                // AND UPDATE old elements present in new data.\n                .merge(rects)\n                .transition(t)\n                  .attr(\"y\", d => HEIGHT - y(Number(d[y_value])))\n                  .attr(\"x\", (d) => x(d[x_value]))\n                  .attr(\"width\", x.bandwidth)\n                  .attr(\"height\", d => y(Number(d[y_value])))\n                  .attr(\"fill\", d => d.diagnose === \"Healthy\" ? \"lightgreen\" : d.diagnose === \"MCI\" ? \"lightblue\": \"pink\")\n\n            }       \n        }\n\n\n  return (\n    // map out different parts of the data\n      <div id=\"chart-area\">\n      </div>\n  )\n}\n\nfunction App() {\n\n  const [data, setData] = useState()\n\n  const loadData = async () => {\n    let uri = './data/biomarkers/diagnose_count.csv' \n    let result = await d3.csv(uri)\n\n    console.log(\"the data is\", console.log(JSON.stringify(result)))\n\n    setData( {\"value\": result,\n            \"dataset\": \"diagnose_count\",\n            \"x\": \"diagnose\",\n            \"y\": \"count\"\n          })\n    console.log(\"the data is\", result)\n  }\n\n  useEffect(() => {  \n    if (!data) {\n     loadData()\n    }\n    console.log('t');\n  });\n\n\n  const selectLoadData = async (value) => {\n        let uri = \"./data/biomarkers/\" + value + \".csv\"\n        let result = await d3.csv(uri)\n        let labels = setXandY(value, result.columns)\n        console.log(\"the labels are \", labels)\n        setData( {\"value\": result,\n        \"dataset\": value,\n        \"x\": labels.x,\n        \"y\": labels.y\n      })\n  }\n\n  const setXandY = (dataset, columns) => {\n    if (dataset === \"result_biomarkers\") {\n      return {\n        \"x\": columns[3],\n        \"y\": columns[4],\n      }\n    } else {\n      return {\n        \"x\": columns[0],\n        \"y\": columns[1],\n      }\n    }\n  }\n\n\n  return (\n    <div className=\"App\">\n    \n\n          <Metrics/>\n\n        <div>\n      <label for=\"datasets\">Dataset</label>\n\n         <select onChange={(e) => selectLoadData(e.target.value)}name=\"dataset\" id=\"dataset\">\n         <option value=\"\" selected disabled hidden>Select dataset</option>\n          <option value=\"result_biomarkers\">Result biomarkers</option>\n          <option value=\"diagnose_count\">Diagnosis group</option>\n\n        </select> \n\n        </div>\n\n         {data && data.value && <DataLoader data={data}/>}\n\n    </div>\n  );\n}\n\nexport default App;\n","import React, { useState, useEffect } from 'react'\nimport './App.css';\nimport * as d3 from \"d3\";\n\nfunction DataLoader(props) {\n    \n    const MARGIN = { LEFT: 100, RIGHT: 10, TOP: 10, BOTTOM: 130 }\n    const WIDTH = 1200 - MARGIN.LEFT - MARGIN.RIGHT\n    const HEIGHT = 800 - MARGIN.TOP - MARGIN.BOTTOM\n\n    const svg = d3.select(\"#chart-area\").append(\"svg\")\n      .attr(\"width\", WIDTH + MARGIN.LEFT + MARGIN.RIGHT)\n      .attr(\"height\", HEIGHT + MARGIN.TOP + MARGIN.BOTTOM)\n\n    const g = svg.append(\"g\")\n      .attr(\"transform\", `translate(${MARGIN.LEFT}, ${MARGIN.TOP})`)\n\n    const data = props.data && props.data.value\n\n    const dataset = props.data && props.data.dataset\n    const x_value = props.data.x\n    console.log(\"the data is\", props.data)\n    console.log(\"the x value is\", x_value)\n    const y_value = props.data.y\n    \n    // X label\n    g.append(\"text\")\n      .attr(\"class\", \"x axis-label\")\n      .attr(\"x\", WIDTH / 2)\n      .attr(\"y\", HEIGHT + 110)\n      .attr(\"font-size\", \"28px\")\n      .attr(\"text-anchor\", \"middle\")\n      .text(x_value)\n\n    // Y label\n    g.append(\"text\")\n      .attr(\"class\", \"y axis-label\")\n      .attr(\"x\", - (HEIGHT / 2))\n      .attr(\"y\", -60)\n      .attr(\"font-size\", \"28px\")\n      .attr(\"text-anchor\", \"middle\")\n      .attr(\"transform\", \"rotate(-90)\")\n      .text(y_value)\n\n      const x = d3.scaleBand()\n        .domain(data.map(d => d[x_value]))\n        .range([0, WIDTH])\n        .paddingInner(0.3)\n        .paddingOuter(0.2)\n      \n      const y = d3.scaleLinear()\n        .domain([0, d3.max(data, d => Number(d[y_value]))])\n        .range([0, HEIGHT])\n\n      const xAxisCall = d3.axisBottom(x)\n      g.append(\"g\")\n        .attr(\"class\", \"x axis\")\n        .attr(\"transform\", `translate(0, ${HEIGHT})`)\n        .call(xAxisCall)\n        .selectAll(\"text\")\n          .attr(\"y\", \"10\")\n          .attr(\"text-align\", \"center\")\n          .attr(\"font-size\", \"16px\")\n\n      const yAxisCall = d3.axisLeft(y)\n        .ticks(5)\n        .tickFormat(d => d)\n      g.append(\"g\")\n        .attr(\"class\", \"y axis\")\n        .call(yAxisCall)\n\n\n        // d3.interval(() => {\n        //   update(data)\n        // }, 1000)\n      \n        const update = (data) => {\n\n            console.log(\"the data is\", data)\n            \n                const t = d3.transition().duration(250)\n\n                // JOIN new data with old elements.\n                const rects = g.selectAll(\"rect\")\n                .data(data)\n      \n                // EXIT old elements not present in new data.\n                rects.exit().remove()\n      \n                // ENTER new elements present in new data...\n                rects.enter().append(\"rect\")\n                .attr(\"fill\", \"#fff\")\n                .attr(\"y\", y(0))\n                .attr(\"height\", 0)\n                // AND UPDATE old elements present in new data.\n                .merge(rects)\n                .transition(t)\n                  .attr(\"y\", d => HEIGHT - y(Number(d[y_value])))\n                  .attr(\"x\", (d) => x(d[x_value]))\n                  .attr(\"width\", x.bandwidth)\n                  .attr(\"height\", d => y(Number(d[y_value])))\n                  .attr(\"fill\", d => d.diagnose === \"Healthy\" ? \"lightgreen\" : d.diagnose === \"MCI\" ? \"lightblue\": \"pink\")\n\n        }\n\n\n        update(data)\n\n\n  return (\n    // map out different parts of the data\n      <div id=\"chart-area\">\n      </div>\n  )\n}\n\nfunction App() {\n\n  const [data, setData] = useState()\n\n  const loadData = async () => {\n    let uri = './data/models.csv' \n    let result = await d3.csv(uri)\n    setData( {\"value\": result,\n            \"dataset\": \"models\",\n            \"x\": \"model\",\n            \"y\": \"parameters\"\n          })\n    console.log(\"the data is\", result)\n  }\n\n   useEffect(() => {  \n    if (!data) {\n     loadData()\n    }\n    console.log('t');\n  });\n\n//   useEffect(() => {\n//     const subscription = props.source.subscribe();\n//     return () => {\n//       // Clean up the subscription\n//       subscription.unsubscribe();\n//     };\n//   });\n\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n         {data && data.value && <DataLoader data={data}/>}\n      </header>\n    </div>\n  );\n}\n\nexport default App;","\nimport React, { useState } from \"react\";\nimport  styled, {css} from 'styled-components'\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport logo from './logo.svg';\nimport spectogram from \"./Spectrogram-19thC.png\"\nimport tmh from \"./tmh.png\"\nimport './App.css';\nimport { Fruit } from \"./Fruit\"\nimport ulme from \"./ulme.jpeg\"\nimport anna from \"./anna.jpeg\"\nimport Birger from \"./birger/App\"\nimport Ulme from \"./ulme/App\"\n\n\n\nexport default function App() {\n  return (\n    <Router>\n      <div className=\"App-container\">\n        <nav className=\"Nav-bar\">\n     \n        <Link to=\"/\"><img className=\"logo\" width=\"100px\" height=\"100px\" src={logo}></img></Link>\n  \n            <div>\n              <Link to=\"/\">Home</Link>\n            </div>\n            <div>\n              <Link to=\"/about\">About</Link>\n            </div>\n            <div>\n              <Link to=\"/ulme\">Ulme</Link>\n            </div>\n            <div>\n              <Link to=\"/anna\">Anna</Link>\n            </div>\n            <div>\n              <Link to=\"/birger\">Birger</Link>\n            </div>\n\n        </nav>\n\n        {/* A <Switch> looks through its children <Route>s and\n            renders the first one that matches the current URL. */}\n        <Switch>\n          <Route path=\"/about\">\n            <About />\n          </Route>\n          <Route path=\"/ulme\">\n            <Ulme />\n          </Route>\n          <Route path=\"/anna\">\n            <Anna />\n          </Route>\n          <Route path=\"/birger\">\n            <Birger />\n          </Route>\n          <Route path=\"/\">\n            <Front />\n          </Route>\n        </Switch>\n\n\n\n        <Footer></Footer>\n\n      </div>\n    </Router>\n  );\n}\n\nfunction Footer(props) {\n  return (\n    <div className=\"Footer-container\">\n\n      <img className=\"logo\" width=\"300px\" src={tmh}></img>\n      <p>Tal Musik Hörsel 2020 ©</p>\n    </div>\n  )\n}\n\n\nfunction Front(props) {\n  return (\n    <div className=\"Front-container\">\n\n      <h1>Speech Music and Hearing</h1>\n\n      <div>\n      <p>The department of speech music and hearing is really cool.</p>\n      </div>\n\n      <img width=\"400px\" height=\"400px\" src={spectogram}></img>\n      <p>This is a spectogram, a visual representation of a sound.</p>\n\n      <p><Link to=\"/birger\">Birger</Link> does research on speech and Alzheimer</p>\n\n      <p> <Link to=\"/ulme\">Ulme</Link> does research on transformers</p>\n\n      <p> <Link to=\"/anna\">Anna</Link> does research on face animation</p>\n\n    </div>\n  )\n}\n\n\nfunction Home(props) {\n\n  const [speed, setSpeed] = useState(0.2);\n\n  const changeSpeed = (change) => {\n    if (speed + change > 0.0001) {\n      setSpeed(speed + change)\n    } else {\n      setSpeed(0.0001)\n    }\n    \n    console.log(\"the speed is\", speed)\n  }\n\n  let awesome = true\n  let value = \"hello everyone\"\n  let person = props.person\n\n  let imgSource = props.imgSource\n  console.log(\"img source\", imgSource)\n\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n\n        { imgSource ? <Rotating src={imgSource} className=\"App-logo\" speed={speed} />  : null}\n        {/* { imgSource ? <img src={imgSource} className=\"App-logo\" alt=\"logo\" />  : null} */}\n        <p>\n          { person }\n        </p>\n\n        <Fruit whateverIwant=\"Iwantcandy\" className=\"App-header\" value=\"banan\"/>\n\n        <h1>Build Amazing Things!</h1>\n        <h2>We are very professional</h2>\n\n        <Button onClick={() => changeSpeed(0.05)} type=\"primary\" value=\"Faster\"></Button>\n        <Button onClick={() => changeSpeed(-0.05)} type=\"secondary\" value=\"Slower\"></Button>\n  \n      </header>\n    </div>\n  );\n}\n\nconst Rotating = styled.img`\n\n${props => props.speed && css`\n    animation: App-logo-spin infinite ${1/props.speed}s linear; \n  `}\n\n  @keyframes App-logo-spin {\n    from {\n      transform: rotate(0deg);\n    }\n    to {\n      transform: rotate(360deg);\n    }\n  }\n`\n\n\nfunction Button(props) {\n\n  return (\n  <button onClick={props.onClick} className={`button ${props.type}`}>{props.value}</button> )\n}\n\nfunction About() {\n  return <h2>This is a cool about page</h2>;\n}\n\n// function Ulme() {\n//   return <Home imgSource={ulme} person=\"Ulme\"></Home>\n// }\n\nfunction Anna() {\n  return  <Home imgSource={anna} person=\"Anna\"></Home>\n}\n\n// function Birger() {\n//   return  <Home imgSource={birger} person=\"Birger\"></Home>\n// }","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}